-- MySQL Script generated by MySQL Workbench
-- Tue May  7 08:42:36 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema easybusiness
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema easybusiness
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `easybusiness` DEFAULT CHARACTER SET utf8 ;
USE `easybusiness` ;

-- -----------------------------------------------------
-- Table `easybusiness`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`account` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `lastname` VARCHAR(45) NULL,
  `firstname` VARCHAR(45) NULL,
  `mail` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `nameEnterprise` VARCHAR(45) NULL,
  `dateInscription` DATE NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easybusiness`.`rate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`rate` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `seuil` VARCHAR(45) NULL,
  `formationPro` VARCHAR(45) NULL,
  `RSI` INT NULL,
  `TVA` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easybusiness`.`enterpriseInfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`enterpriseInfo` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NULL,
  `ACRE` TINYINT NULL,
  `ARCE` TINYINT NULL,
  `RCP` INT NULL,
  `SIRET` VARCHAR(45) NULL,
  `declarationTime` VARCHAR(45) NULL,
  `rate_id` INT NOT NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_accountInfo_account_idx` (`account_id` ASC),
  INDEX `fk_accountInfo_rate1_idx` (`rate_id` ASC),
  CONSTRAINT `fk_accountInfo_account`
    FOREIGN KEY (`account_id`)
    REFERENCES `easybusiness`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_accountInfo_rate1`
    FOREIGN KEY (`rate_id`)
    REFERENCES `easybusiness`.`rate` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easybusiness`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`employees` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `salary` VARCHAR(45) NULL,
  `job` VARCHAR(45) NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_employees_account1_idx` (`account_id` ASC),
  CONSTRAINT `fk_employees_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `easybusiness`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easybusiness`.`bilan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`bilan` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `CA` VARCHAR(45) NULL,
  `taxe` VARCHAR(45) NULL,
  `impots` VARCHAR(45) NULL,
  `dateStr` VARCHAR(45) NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_bilan_account1_idx` (`account_id` ASC),
  CONSTRAINT `fk_bilan_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `easybusiness`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easybusiness`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`client` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nom` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL, -- Acheteur / Vendeur
  `adresse` VARCHAR(45) NULL,
  `formeJuridique` VARCHAR(45) NULL,
  `account_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_client_account1_idx` (`account_id` ASC),
  CONSTRAINT `fk_client_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `easybusiness`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `easybusiness`.`facture`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `easybusiness`.`facture` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `prix` VARCHAR(45) NOT NULL, -- Prix total
  `dateStr` VARCHAR(45) NOT NULL, -- Date reglement
  `notes` VARCHAR(45) NULL,
  `typeFacture` VARCHAR(45) NULL,
  `dateFacture` VARCHAR(45) NULL, -- Date emission facture
  `dateLivraison` VARCHAR(45) NULL, -- Date livraison
  `numFacture` VARCHAR(45) NOT NULL,
  `account_id` INT NOT NULL,
  `client_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_facture_account1_idx` (`account_id` ASC),
  INDEX `fk_facture_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_facture_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `easybusiness`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_facture_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `easybusiness`.`client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
